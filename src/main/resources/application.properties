quarkus.http.cors=true
quarkus.flyway.migrate-at-start=true
quarkus.datasource.min-size=3
quarkus.datasource.max-size=13
quarkus.datasource.url=jdbc:mariadb://${DB_HOST:localhost}:${DB_PORT:3306}/${DB_NAME:klopaphere-votes}
quarkus.datasource.driver=${DATASOURCE_DRIVER:org.mariadb.jdbc.Driver}
quarkus.datasource.username=${DB_USER:user}
quarkus.datasource.password=${DB_PASSWORD:pass}
quarkus.hibernate-orm.database.generation=none
quarkus.flyway.locations=${DATASOURCE_MIGRATION_LOCATIONS:classpath:db/migration}
quarkus.swagger-ui.always-include=true

# Google API Key
klopaphere.google.api.key=${GOOGLE_API_KEY:}

# Kafka push votings
mp.messaging.outgoing.voting.connector=smallrye-kafka
mp.messaging.outgoing.voting.topic=voting
mp.messaging.outgoing.voting.value.serializer=io.quarkus.kafka.client.serialization.ObjectMapperSerializer
mp.messaging.outgoing.voting.bootstrap.servers=${KAFKA_HOST:kafka.apps.ocp4.keithtenzer.com:443}
mp.messaging.outgoing.voting.security.protocol=SASL_SSL
mp.messaging.outgoing.voting.sasl.mechanism=SCRAM-SHA-512
mp.messaging.outgoing.voting.sasl.jaas.config=org.apache.kafka.common.security.scram.ScramLoginModule required username="${KAFKA_USER:klopaphere}" password="${KAFKA_PASSWORD:mySecretPassword}";

# Kafka push demands
mp.messaging.outgoing.demand.connector=smallrye-kafka
mp.messaging.outgoing.demand.topic=demand
mp.messaging.outgoing.demand.value.serializer=io.quarkus.kafka.client.serialization.ObjectMapperSerializer
mp.messaging.outgoing.demand.bootstrap.servers=${KAFKA_HOST:kafka.apps.ocp4.keithtenzer.com:443}
mp.messaging.outgoing.demand.security.protocol=SASL_SSL
mp.messaging.outgoing.demand.sasl.mechanism=SCRAM-SHA-512
mp.messaging.outgoing.demand.sasl.jaas.config=org.apache.kafka.common.security.scram.ScramLoginModule required username="${KAFKA_USER:klopaphere}" password="${KAFKA_PASSWORD:mySecretPassword}";

# Kafka consume votings
mp.messaging.incoming.voting-in.connector=smallrye-kafka
mp.messaging.incoming.voting-in.topic=voting
mp.messaging.incoming.voting-in.value.deserializer=de.klopaphere.voting.VotingDeserializer
mp.messaging.incoming.voting-in.bootstrap.servers=${KAFKA_HOST:kafka.apps.ocp4.keithtenzer.com:443}
mp.messaging.incoming.voting-in.security.protocol=SASL_SSL
mp.messaging.incoming.voting-in.sasl.mechanism=SCRAM-SHA-512
mp.messaging.incoming.voting-in.sasl.jaas.config=org.apache.kafka.common.security.scram.ScramLoginModule required username="${KAFKA_USER:klopaphere}" password="${KAFKA_PASSWORD:mySecretPassword}";

# Kafka consume demands
mp.messaging.incoming.demand-in.connector=smallrye-kafka
mp.messaging.incoming.demand-in.topic=demand
mp.messaging.incoming.demand-in.value.deserializer=de.klopaphere.demand.DemandDeserializer
mp.messaging.incoming.demand-in.bootstrap.servers=${KAFKA_HOST:kafka.apps.ocp4.keithtenzer.com:443}
mp.messaging.incoming.demand-in.security.protocol=SASL_SSL
mp.messaging.incoming.demand-in.sasl.mechanism=SCRAM-SHA-512
mp.messaging.incoming.demand-in.sasl.jaas.config=org.apache.kafka.common.security.scram.ScramLoginModule required username="${KAFKA_USER:klopaphere}" password="${KAFKA_PASSWORD:mySecretPassword}";
